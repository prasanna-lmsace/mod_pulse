{"version":3,"file":"chaptersource.min.js","sources":["../src/chaptersource.js"],"sourcesContent":["// This file is part of Moodle - http://moodle.org/\n//\n// Moodle is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// Moodle is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.\n\n/**\n * Frameworks datasource.\n *\n * This module is compatible with core/form-autocomplete.\n *\n * @module     tool_lp/frameworks_datasource\n * @copyright  2016 Frédéric Massart - FMCorz.net\n * @license    http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\n */\n\ndefine(['jquery', 'core/ajax', 'core/notification', 'core/modal_factory', 'core/fragment', 'core/str', 'core/modal_events'],\n    function($, Ajax, Notification, ModalFactory, Fragment, Str, ModalEvents) {\n\n    const previewModalBody = function(contextID, userid = null) {\n\n        var params;\n        if (window.tinyMCE !== undefined && window.tinyMCE.get('id_pulsenotification_headercontent_editor')) {\n            // EditorPlugin = window.tinyMCE;\n            params = {\n                contentheader: window.tinyMCE.get('id_pulsenotification_headercontent_editor').getContent(),\n                contentstatic: window.tinyMCE.get('id_pulsenotification_staticcontent_editor').getContent(),\n                contentfooter: window.tinyMCE.get('id_pulsenotification_footercontent_editor').getContent(),\n                userid: userid\n            };\n        } else {\n            // EditorPlugin = document;\n            params = {\n                contentheader: document.querySelector('#id_pulsenotification_headercontent_editoreditable').innerHTML,\n                contentstatic: document.querySelector('#id_pulsenotification_staticcontent_editoreditable').innerHTML,\n                contentfooter: document.querySelector('#id_pulsenotification_footercontent_editoreditable').innerHTML,\n                userid: userid\n            };\n        }\n\n        var dynamicparams = {};\n\n        if (document.querySelector('[name=pulsenotification_dynamiccontent]') !== null) {\n            dynamicparams = {\n                contentdynamic: document.querySelector('[name=pulsenotification_dynamiccontent]').value,\n                contenttype: document.querySelector('[name=pulsenotification_contenttype]').value,\n                chapterid: document.querySelector('[name=pulsenotification_chapterid]').value,\n                contentlength: document.querySelector('[name=pulsenotification_contentlength]').value,\n            };\n        }\n        // Get the form data.\n        var formData;\n        var form = document.forms['pulse-automation-template'];\n        var formdata = new FormData(form);\n        formdata = new URLSearchParams(formdata).toString();\n        formData = {\n            formdata: formdata\n        };\n\n        var finalParams = {...params, ...dynamicparams, ...formData};\n\n        return Fragment.loadFragment('pulseaction_notification', 'preview_content', contextID, finalParams);\n    };\n\n    const previewModal = function(contextID) {\n\n        ModalFactory.create({\n            title: Str.get_string('preview', 'pulseaction_notification'),\n            body: previewModalBody(contextID),\n            large: true,\n        }).then((modal) => {\n            modal.show();\n\n            modal.getRoot().on(ModalEvents.bodyRendered, function() {\n                modal.getRoot().get(0).querySelector('[name=userselector]').addEventListener('change', (e) => {\n                    e.preventDefault();\n                    var target = e.target;\n                    modal.setBody(previewModalBody(contextID, target.value));\n                });\n            });\n\n            return;\n        }).catch();\n    };\n\n    const notificationModal = function(contextID, instance, userid) {\n\n        var params = {\n            instanceid: instance,\n            userid: userid\n        };\n\n        ModalFactory.create({\n            title: Str.get_string('preview', 'pulseaction_notification'),\n            body: Fragment.loadFragment('pulseaction_notification', 'preview_instance_content', contextID, params),\n            large: true,\n        }).then((modal) => {\n            modal.show();\n            return;\n        }).catch();\n    };\n\n    return {\n\n        processResults: function(selector, modules) {\n            return modules;\n        },\n\n        transport: function(selector, query, success, failure) {\n\n            var mod = document.querySelector(\"#id_pulsenotification_dynamiccontent\");\n\n            var promise = Ajax.call([{\n                methodname: 'pulseaction_notification_get_chapters',\n                args: {mod: mod.value}\n            }]);\n\n            promise[0].then(function(result) {\n                success(result);\n                return;\n            }).fail(failure);\n        },\n\n        updateChapter: function(ctxID, contentMods) {\n\n            const SELECTORS = {\n                chaperType: \"#id_pulsenotification_contenttype\",\n                mod: \"#id_pulsenotification_dynamiccontent\"\n            };\n\n            // Disable the content type option for modules other than book and page.\n            if (contentMods !== null) {\n                var type = document.querySelector(SELECTORS.chaperType);\n                document.querySelector(SELECTORS.mod).addEventListener(\"change\", (e) => {\n                    var target = e.currentTarget;\n                    var selected = target.value;\n                    if (contentMods.includes(selected.toString())) {\n                        Array.prototype.find.call(type.options, function(cmid) {\n                            if (cmid.value == '2') {\n                                cmid.disabled = false;\n                            }\n                        });\n                    } else {\n                        Array.prototype.find.call(type.options, function(cmid) {\n                            if (cmid.value == '2') {\n                                cmid.disabled = true;\n                            }\n                        });\n                    }\n                });\n            }\n\n            document.querySelector(SELECTORS.chaperType).addEventListener(\"change\", () => resetChapter());\n            document.querySelector(SELECTORS.mod).addEventListener(\"change\", () => resetChapter());\n            var chapter = document.querySelector(\"#id_pulsenotification_chapterid\");\n\n            /**\n             *\n             */\n            function resetChapter() {\n                chapter.innerHTML = '';\n                chapter.value = '';\n                var event = new Event('change');\n                chapter.dispatchEvent(event);\n            }\n        },\n\n        previewNotification: function(contextid) {\n\n            var btn = document.querySelector('[name=\"pulsenotification_preview\"]');\n\n            if (btn === null) {\n                return;\n            }\n\n            btn.addEventListener('click', function() {\n                previewModal(contextid);\n            });\n        },\n\n        reportModal: function(contextID) {\n            // View content.\n            /* var btn = document.querySelectorAll('[data-target=\"view-content\"]');\n\n            if (btn === null) {\n                return;\n            }\n\n            btn.forEach((element) => {\n                element.addEventListener('click', function(e) {\n\n                    var target = e.target.closest('a');\n\n                    var instance = target.dataset.instanceid;\n                    var userid = target.dataset.userid;\n\n                    notificationModal(contextID, instance, userid); // Notification modal.\n                });\n            });\n */\n\n            document.addEventListener('click', function(e) {\n\n                if (e.target.closest('[data-target=\"view-content\"]') !== null) {\n\n                    var target = e.target.closest('a');\n\n                    var instance = target.dataset.instanceid;\n                    var userid = target.dataset.userid;\n\n                    notificationModal(contextID, instance, userid); // Notification modal.\n                }\n\n            })\n        }\n    };\n\n});\n"],"names":["define","$","Ajax","Notification","ModalFactory","Fragment","Str","ModalEvents","previewModalBody","contextID","userid","params","undefined","window","tinyMCE","get","contentheader","getContent","contentstatic","contentfooter","document","querySelector","innerHTML","formData","dynamicparams","contentdynamic","value","contenttype","chapterid","contentlength","form","forms","formdata","FormData","URLSearchParams","toString","finalParams","loadFragment","processResults","selector","modules","transport","query","success","failure","mod","call","methodname","args","then","result","fail","updateChapter","ctxID","contentMods","SELECTORS","type","addEventListener","e","selected","currentTarget","includes","Array","prototype","find","options","cmid","disabled","resetChapter","chapter","event","Event","dispatchEvent","previewNotification","contextid","btn","create","title","get_string","body","large","modal","show","getRoot","on","bodyRendered","preventDefault","target","setBody","catch","reportModal","closest","instance","dataset","instanceid","notificationModal"],"mappings":"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"}