{"version":3,"file":"module.min.js","sources":["../src/module.js"],"sourcesContent":["// This file is part of Moodle - http://moodle.org/\r\n//\r\n// Moodle is free software: you can redistribute it and/or modify\r\n// it under the terms of the GNU General Public License as published by\r\n// the Free Software Foundation, either version 3 of the License, or\r\n// (at your option) any later version.\r\n//\r\n// Moodle is distributed in the hope that it will be useful,\r\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\r\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\r\n// GNU General Public License for more details.\r\n//\r\n// You should have received a copy of the GNU General Public License\r\n// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.\r\n\r\n/**\r\n * Module javascript to place the placeholders.\r\n * Modified version of IOMAD Email template emailvars.\r\n *\r\n * @module   mod_pulse/module\r\n * @category  Classes - autoloading\r\n * @copyright 2021, bdecent gmbh bdecent.de\r\n * @license   http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\r\n */\r\n\r\ndefine([], function() {\r\n\r\n    return {\r\n\r\n        /**\r\n         * Setup the classes to editors works with placeholders.\r\n         */\r\n        init: function() {\r\n            var module = this;\r\n            var templatevars = document.getElementsByClassName(\"fitem_id_templatevars_editor\");\r\n            for (var l = 0; l < templatevars.length; l++) {\r\n                templatevars[l].addEventListener('click', function() {\r\n                    var EditorInput = document.getElementById('id_pulse_content_editoreditable');\r\n                    module.insertCaretActive(EditorInput);\r\n                });\r\n            }\r\n            var notificationheader = document.getElementById('admin-notificationheader');\r\n            if (notificationheader !== null) {\r\n                notificationheader.addEventListener('click', function() {\r\n                    var EditorInput = document.getElementById('id_s_mod_pulse_notificationheadereditable');\r\n                    module.insertCaretActive(EditorInput);\r\n                });\r\n            }\r\n\r\n            var notificationfooter = document.getElementById('admin-notificationfooter');\r\n            if (notificationfooter !== null) {\r\n                notificationfooter.addEventListener('click', function() {\r\n                    var EditorInput = document.getElementById('id_s_mod_pulse_notificationfootereditable');\r\n                    module.insertCaretActive(EditorInput);\r\n                });\r\n            }\r\n\r\n            var clickforword = document.getElementsByClassName('clickforword');\r\n            for (var i = 0; i < clickforword.length; i++) {\r\n                clickforword[i].addEventListener('click', function(e) {\r\n                    e.preventDefault(); // To prevent the default behaviour of a tag.\r\n                    module.insertAtCaret(\"{\" + this.getAttribute('data-text') + \"}\");\r\n                });\r\n            }\r\n\r\n            // Make selected roles as badges in module edit form page.\r\n            if (document.getElementById('page-mod-pulse-mod') !== null && document.getElementById('page-mod-pulse-mod')\r\n                .querySelector(\"#fgroup_id_completionrequireapproval [data-fieldtype='autocomplete']\") !== null) {\r\n                const textNodes = this.getAllTextNodes(\r\n                    document.getElementById('page-mod-pulse-mod')\r\n                    .querySelector(\"#fgroup_id_completionrequireapproval [data-fieldtype='autocomplete']\")\r\n                );\r\n                textNodes.forEach(node => {\r\n                    const span = document.createElement('span');\r\n                    span.classList = 'badge badge-info pulse-completion-roles';\r\n                    node.after(span);\r\n                    span.appendChild(node);\r\n                });\r\n            }\r\n        },\r\n\r\n        insertCaretActive: function(EditorInput) {\r\n            var caret = document.getElementsByClassName(\"insertatcaretactive\");\r\n            for (var j = 0; j < caret.length; j++) {\r\n                caret[j].classList.remove(\"insertatcaretactive\");\r\n            }\r\n            EditorInput.classList.add(\"insertatcaretactive\");\r\n        },\r\n\r\n        /**\r\n         * Filter text from node.\r\n         * @param  {string} element\r\n         * @returns {array} list of childNodes.\r\n         */\r\n        getAllTextNodes: function(element) {\r\n            return Array.from(element.childNodes)\r\n            .filter(node => node.nodeType === 3 && node.textContent.trim().length > 1);\r\n        },\r\n\r\n        /**\r\n         * Insert the placeholder in selected caret place.\r\n         * @param  {string} myValue\r\n         */\r\n        insertAtCaret: function(myValue) {\r\n            var caretelements = document.getElementsByClassName(\"insertatcaretactive\");\r\n            var sel, range;\r\n            for (var n = 0; n < caretelements.length; n++) {\r\n                var thiselem = caretelements[n];\r\n\r\n                if (typeof thiselem.value === 'undefined' && window.getSelection) {\r\n                    sel = window.getSelection();\r\n                    if (sel.getRangeAt && sel.rangeCount) {\r\n                        range = sel.getRangeAt(0);\r\n                        range.deleteContents();\r\n                        range.insertNode(document.createTextNode(myValue));\r\n\r\n                        for (let position = 0; position != (myValue.length + 1); position++) {\r\n                            sel.modify(\"move\", \"right\", \"character\");\r\n                        }\r\n                    }\r\n                } else if (typeof thiselem.value === 'undefined' && document.selection && document.selection.createRange) {\r\n                    range = document.selection.createRange();\r\n                    range.text = myValue;\r\n                }\r\n\r\n                if (typeof thiselem.value !== 'undefined') {\r\n                    if (document.selection) {\r\n                        // For browsers like Internet Explorer.\r\n                        thiselem.focus();\r\n                        sel = document.selection.createRange();\r\n                        sel.text = myValue;\r\n                        thiselem.focus();\r\n                    } else if (thiselem.selectionStart || thiselem.selectionStart == '0') {\r\n                        // For browsers like Firefox and Webkit based.\r\n                        var startPos = thiselem.selectionStart;\r\n                        var endPos = thiselem.selectionEnd;\r\n                        thiselem.value = thiselem.value.substring(0, startPos)\r\n                            + myValue + thiselem.value.substring(endPos, thiselem.value.length);\r\n                        thiselem.focus();\r\n                        thiselem.selectionStart = startPos + myValue.length;\r\n                        thiselem.selectionEnd = startPos + myValue.length;\r\n                        thiselem.focus();\r\n                    } else {\r\n                        thiselem.value += myValue;\r\n                        thiselem.focus();\r\n                    }\r\n                }\r\n            }\r\n        },\r\n    };\r\n});\r\n"],"names":["define","init","module","this","templatevars","document","getElementsByClassName","l","length","addEventListener","EditorInput","getElementById","insertCaretActive","notificationheader","notificationfooter","clickforword","i","e","preventDefault","insertAtCaret","getAttribute","querySelector","getAllTextNodes","forEach","node","span","createElement","classList","after","appendChild","caret","j","remove","add","element","Array","from","childNodes","filter","nodeType","textContent","trim","myValue","sel","range","caretelements","n","thiselem","value","window","getSelection","getRangeAt","rangeCount","deleteContents","insertNode","createTextNode","position","modify","selection","createRange","text","focus","selectionStart","startPos","endPos","selectionEnd","substring"],"mappings":";;;;;;;;;AAyBAA,0BAAO,IAAI,iBAEA,CAKHC,KAAM,mBACEC,OAASC,KACTC,aAAeC,SAASC,uBAAuB,gCAC1CC,EAAI,EAAGA,EAAIH,aAAaI,OAAQD,IACrCH,aAAaG,GAAGE,iBAAiB,SAAS,eAClCC,YAAcL,SAASM,eAAe,mCAC1CT,OAAOU,kBAAkBF,oBAG7BG,mBAAqBR,SAASM,eAAe,4BACtB,OAAvBE,oBACAA,mBAAmBJ,iBAAiB,SAAS,eACrCC,YAAcL,SAASM,eAAe,6CAC1CT,OAAOU,kBAAkBF,oBAI7BI,mBAAqBT,SAASM,eAAe,4BACtB,OAAvBG,oBACAA,mBAAmBL,iBAAiB,SAAS,eACrCC,YAAcL,SAASM,eAAe,6CAC1CT,OAAOU,kBAAkBF,wBAI7BK,aAAeV,SAASC,uBAAuB,gBAC1CU,EAAI,EAAGA,EAAID,aAAaP,OAAQQ,IACrCD,aAAaC,GAAGP,iBAAiB,SAAS,SAASQ,GAC/CA,EAAEC,iBACFhB,OAAOiB,cAAc,IAAMhB,KAAKiB,aAAa,aAAe,WAKd,OAAlDf,SAASM,eAAe,uBACmE,OADjCN,SAASM,eAAe,sBACjFU,cAAc,wEAAkF,CAC/ElB,KAAKmB,gBACnBjB,SAASM,eAAe,sBACvBU,cAAc,yEAETE,SAAQC,aACRC,KAAOpB,SAASqB,cAAc,QACpCD,KAAKE,UAAY,0CACjBH,KAAKI,MAAMH,MACXA,KAAKI,YAAYL,WAK7BZ,kBAAmB,SAASF,qBACpBoB,MAAQzB,SAASC,uBAAuB,uBACnCyB,EAAI,EAAGA,EAAID,MAAMtB,OAAQuB,IAC9BD,MAAMC,GAAGJ,UAAUK,OAAO,uBAE9BtB,YAAYiB,UAAUM,IAAI,wBAQ9BX,gBAAiB,SAASY,gBACfC,MAAMC,KAAKF,QAAQG,YACzBC,QAAOd,MAA0B,IAAlBA,KAAKe,UAAkBf,KAAKgB,YAAYC,OAAOjC,OAAS,KAO5EW,cAAe,SAASuB,iBAEhBC,IAAKC,MADLC,cAAgBxC,SAASC,uBAAuB,uBAE3CwC,EAAI,EAAGA,EAAID,cAAcrC,OAAQsC,IAAK,KACvCC,SAAWF,cAAcC,WAEC,IAAnBC,SAASC,OAAyBC,OAAOC,kBAChDP,IAAMM,OAAOC,gBACLC,YAAcR,IAAIS,WAAY,EAClCR,MAAQD,IAAIQ,WAAW,IACjBE,iBACNT,MAAMU,WAAWjD,SAASkD,eAAeb,cAEpC,IAAIc,SAAW,EAAGA,UAAad,QAAQlC,OAAS,EAAIgD,WACrDb,IAAIc,OAAO,OAAQ,QAAS,wBAGH,IAAnBV,SAASC,OAAyB3C,SAASqD,WAAarD,SAASqD,UAAUC,eACzFf,MAAQvC,SAASqD,UAAUC,eACrBC,KAAOlB,iBAGa,IAAnBK,SAASC,SACZ3C,SAASqD,UAETX,SAASc,SACTlB,IAAMtC,SAASqD,UAAUC,eACrBC,KAAOlB,QACXK,SAASc,aACN,GAAId,SAASe,gBAA6C,KAA3Bf,SAASe,eAAuB,KAE9DC,SAAWhB,SAASe,eACpBE,OAASjB,SAASkB,aACtBlB,SAASC,MAAQD,SAASC,MAAMkB,UAAU,EAAGH,UACvCrB,QAAUK,SAASC,MAAMkB,UAAUF,OAAQjB,SAASC,MAAMxC,QAChEuC,SAASc,QACTd,SAASe,eAAiBC,SAAWrB,QAAQlC,OAC7CuC,SAASkB,aAAeF,SAAWrB,QAAQlC,OAC3CuC,SAASc,aAETd,SAASC,OAASN,QAClBK,SAASc"}