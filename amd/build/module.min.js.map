{"version":3,"file":"module.min.js","sources":["../src/module.js"],"sourcesContent":["// This file is part of Moodle - http://moodle.org/\n//\n// Moodle is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// Moodle is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.\n\n/**\n * Module javascript to place the placeholders.\n * Modified version of IOMAD Email template emailvars.\n *\n * @module   mod_pulse/module\n * @category  Classes - autoloading\n * @copyright 2021, bdecent gmbh bdecent.de\n * @license   http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\n */\n\ndefine(['core_editor/events'], function() {\n\n    return {\n        /**\n         * Setup the classes to editors works with placeholders.\n         */\n        init: function() {\n            var module = this;\n\n            var templatevars = document.getElementsByClassName(\"fitem_id_templatevars_editor\");\n            for (var l = 0; l < templatevars.length; l++) {\n                templatevars[l].addEventListener('click', function() {\n                    var EditorInput = document.getElementById('id_pulse_content_editoreditable');\n                    if (EditorInput !== null) {\n                        module.insertCaretActive(EditorInput);\n                    }\n                });\n            }\n\n            var notificationheader = document.getElementById('admin-notificationheader');\n            if (notificationheader !== null) {\n                notificationheader.addEventListener('click', function() {\n                    var EditorInput = document.getElementById('id_s_mod_pulse_notificationheadereditable');\n                    module.insertCaretActive(EditorInput);\n                });\n            }\n\n            var notificationfooter = document.getElementById('admin-notificationfooter');\n            if (notificationfooter !== null) {\n                notificationfooter.addEventListener('click', function() {\n                    var EditorInput = document.getElementById('id_s_mod_pulse_notificationfootereditable');\n                    module.insertCaretActive(EditorInput);\n                });\n            }\n\n            templatevars = document.getElementsByClassName(\"fitem_id_templatevars_editor\");\n            if (templatevars) {\n                templatevars.forEach((elem) => {\n                    elem.addEventListener('click', function(e) {\n                        var target = e.currentTarget;\n                        var EditorInput = target.querySelector('[id*=\"_editoreditable\"]');\n                        module.insertCaretActive(EditorInput);\n                    });\n                });\n            }\n\n            // Console.log(window.tinyMCE.get());\n            var targetNode = document.querySelector('textarea[id$=_editor]');\n            if (targetNode !== null) {\n                var observer = new MutationObserver(function() {\n                    if (targetNode.style.display == 'none') {\n                        setTimeout(initIframeListeners, 100);\n                    }\n                });\n                observer.observe(targetNode, {attributes: true, childList: true});\n            }\n\n            const initIframeListeners = () => {\n\n                var iframes = document.querySelectorAll('[data-fieldtype=\"editor\"] iframe');\n                if (iframes === null || !iframes.length) {\n                    return false;\n                }\n\n                iframes.forEach((iframe) => {\n                    iframe.contentDocument.addEventListener('click', function(e) {\n\n                        var currentFrame = e.target;\n                        iframes.forEach((frame) => {\n                            var frameElem = frame.contentDocument.querySelector(\".insertatcaretactive\");\n                            if (frameElem !== null) {\n                                frameElem.classList.remove(\"insertatcaretactive\");\n                            }\n                        });\n\n                        var contentBody = currentFrame.querySelector('body');\n                        if (contentBody !== null) {\n                            contentBody.classList.add(\"insertatcaretactive\");\n                        }\n                    });\n                });\n\n                return true;\n            };\n\n\n            var clickforword = document.getElementsByClassName('clickforword');\n            for (var i = 0; i < clickforword.length; i++) {\n                clickforword[i].addEventListener('click', function(e) {\n                    e.preventDefault(); // To prevent the default behaviour of a tag.\n\n                    var content = \"{\" + this.getAttribute('data-text') + \"}\";\n                    var iframes = document.querySelectorAll('[data-fieldtype=\"editor\"] iframe');\n                    if (iframes === null || !iframes.length) {\n                        return false;\n                    }\n                    var tinyEditor;\n                    iframes.forEach((frame) => {\n                        var frameElem = frame.contentDocument.querySelector(\".insertatcaretactive\");\n                        if (frameElem !== null) {\n                            var contentBody = frame.contentDocument.querySelector('body');\n                            if (contentBody !== null) {\n                                contentBody.classList.add(\"insertatcaretactive\");\n                                var id = contentBody.dataset.id;\n                                var editor = window.tinyMCE.get(id);\n                                tinyEditor = editor;\n                            }\n                        }\n                        return false;\n                    });\n\n                    if (tinyEditor) {\n                        tinyEditor.selection.setContent(content);\n                    } else {\n                        module.insertAtCaret(content);\n                    }\n\n                    return true;\n                });\n            }\n\n            // Make selected roles as badges in module edit form page.\n            if (document.getElementById('page-mod-pulse-mod') !== null && document.getElementById('page-mod-pulse-mod')\n                .querySelector(\"#fgroup_id_completionrequireapproval [data-fieldtype='autocomplete']\") !== null) {\n                const textNodes = this.getAllTextNodes(\n                    document.getElementById('page-mod-pulse-mod')\n                    .querySelector(\"#fgroup_id_completionrequireapproval [data-fieldtype='autocomplete']\")\n                );\n                textNodes.forEach(node => {\n                    const span = document.createElement('span');\n                    span.classList = 'badge badge-info pulse-completion-roles';\n                    node.after(span);\n                    span.appendChild(node);\n                });\n            }\n        },\n\n        insertCaretActive: function(EditorInput) {\n            if (EditorInput === null) {\n                return;\n            }\n            var caret = document.getElementsByClassName(\"insertatcaretactive\");\n            for (var j = 0; j < caret.length; j++) {\n                caret[j].classList.remove(\"insertatcaretactive\");\n            }\n            EditorInput.classList.add(\"insertatcaretactive\");\n        },\n\n        /**\n         * Filter text from node.\n         * @param  {string} element\n         * @returns {array} list of childNodes.\n         */\n        getAllTextNodes: function(element) {\n            return Array.from(element.childNodes)\n            .filter(node => node.nodeType === 3 && node.textContent.trim().length > 1);\n        },\n\n        /**\n         * Find the selection is inside the editor\n         *\n         * @param {string} div\n         * @returns {bool}\n         */\n        isSelectionInsideDiv: (div) => {\n            const selection = window.getSelection();\n            if (selection.rangeCount === 0) {\n              return false;\n            }\n\n            // Get the start and end nodes of the selection.\n            const startNode = selection.getRangeAt(0).startContainer;\n            const endNode = selection.getRangeAt(0).endContainer;\n\n            // Check if the start and end nodes are both descendants of the editor div.\n            return div.contains(startNode) && div.contains(endNode);\n        },\n\n        /**\n         * Insert the placeholder in selected caret place.\n         * @param  {string} myValue\n         */\n        insertAtCaret: function(myValue) {\n            var caretelements = document.getElementsByClassName(\"insertatcaretactive\");\n            var sel, range;\n            for (var n = 0; n < caretelements.length; n++) {\n                var thiselem = caretelements[n];\n\n                if (typeof thiselem.value === 'undefined' && window.getSelection && this.isSelectionInsideDiv(thiselem)) {\n                    sel = window.getSelection();\n                    if (sel.getRangeAt && sel.rangeCount) {\n                        range = sel.getRangeAt(0);\n                        range.deleteContents();\n                        range.insertNode(document.createTextNode(myValue));\n\n                        for (let position = 0; position != (myValue.length + 1); position++) {\n                            sel.modify(\"move\", \"right\", \"character\");\n                        }\n                    }\n                } else if (typeof thiselem.value === 'undefined' && document.selection && document.selection.createRange) {\n                    range = document.selection.createRange();\n                    range.text = myValue;\n                }\n\n                if (typeof thiselem.value !== 'undefined') {\n                    if (document.selection) {\n                        // For browsers like Internet Explorer.\n                        thiselem.focus();\n                        sel = document.selection.createRange();\n                        sel.text = myValue;\n                        thiselem.focus();\n                    } else if (thiselem.selectionStart || thiselem.selectionStart == '0') {\n                        // For browsers like Firefox and Webkit based.\n                        var startPos = thiselem.selectionStart;\n                        var endPos = thiselem.selectionEnd;\n                        thiselem.value = thiselem.value.substring(0, startPos)\n                            + myValue + thiselem.value.substring(endPos, thiselem.value.length);\n                        thiselem.focus();\n                        thiselem.selectionStart = startPos + myValue.length;\n                        thiselem.selectionEnd = startPos + myValue.length;\n                        thiselem.focus();\n                    } else {\n                        thiselem.value += myValue;\n                        thiselem.focus();\n                    }\n                }\n            }\n        },\n    };\n});\n"],"names":["define","init","module","this","templatevars","document","getElementsByClassName","l","length","addEventListener","EditorInput","getElementById","insertCaretActive","notificationheader","notificationfooter","forEach","elem","e","currentTarget","querySelector","targetNode","MutationObserver","style","display","setTimeout","initIframeListeners","observe","attributes","childList","iframes","querySelectorAll","iframe","contentDocument","currentFrame","target","frame","frameElem","classList","remove","contentBody","add","clickforword","i","preventDefault","tinyEditor","content","getAttribute","id","dataset","editor","window","tinyMCE","get","selection","setContent","insertAtCaret","getAllTextNodes","node","span","createElement","after","appendChild","caret","j","element","Array","from","childNodes","filter","nodeType","textContent","trim","isSelectionInsideDiv","div","getSelection","rangeCount","startNode","getRangeAt","startContainer","endNode","endContainer","contains","myValue","sel","range","caretelements","n","thiselem","value","deleteContents","insertNode","createTextNode","position","modify","createRange","text","focus","selectionStart","startPos","endPos","selectionEnd","substring"],"mappings":"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"}