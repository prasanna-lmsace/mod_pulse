{"version":3,"sources":["../src/completion.js"],"names":["define","Fragment","updatecompletionbuttons","instances","document","getElementsByClassName","modules","moduleid","i","length","instance","id","getAttribute","parseInt","replace","push","params","JSON","stringify","completionbuttons","loadFragment","approvebtn","element","referenceNode","completioncontent","then","data","parse","k","getElementById","createElement","innerHTML","classList","add","parentNode","insertBefore","nextSibling","fail","init","body","contains"],"mappings":"AAwBAA,OAAM,wBAAC,CAAC,eAAD,CAAD,CAAoB,SAASC,CAAT,CAAmB,CAEzC,MAAO,CAEHC,uBAAuB,CAAE,kCAAW,CAGhC,OAFIC,CAAAA,CAAS,CAAGC,QAAQ,CAACC,sBAAT,CAAgC,eAAhC,CAEhB,CADIC,CAAO,CAAG,EACd,CADsBC,CACtB,CAASC,CAAC,CAAG,CAAb,CAAgBA,CAAC,CAAGL,CAAS,CAACM,MAA9B,CAAsCD,CAAC,EAAvC,CAA2C,IACnCE,CAAAA,CAAQ,CAAGP,CAAS,CAACK,CAAD,CADe,CAEnCG,CAAE,CAAGD,CAAQ,CAACE,YAAT,CAAsB,IAAtB,CAF8B,CAGvCL,CAAQ,CAAGM,QAAQ,CAACF,CAAE,CAACG,OAAH,CAAW,SAAX,CAAsB,EAAtB,CAAD,CAAnB,CACAR,CAAO,CAACS,IAAR,CAAaR,CAAb,CACH,CACD,GAAIS,CAAAA,CAAM,CAAG,CAACV,OAAO,CAAGW,IAAI,CAACC,SAAL,CAAeZ,CAAf,CAAX,CAAb,CACA,GAAqB,CAAjB,CAAAA,CAAO,CAACG,MAAZ,CAAwB,IAChBU,CAAAA,CAAiB,CAAGlB,CAAQ,CAACmB,YAAT,CAAsB,WAAtB,CAAmC,mBAAnC,CAAwD,CAAxD,CAA2DJ,CAA3D,CADJ,CAEhBK,CAFgB,CAEJC,CAFI,CAEKC,CAFL,CAEoBC,CAFpB,CAGpBL,CAAiB,CAACM,IAAlB,CAAuB,SAACC,CAAD,CAAU,CAC7BA,CAAI,CAAGT,IAAI,CAACU,KAAL,CAAWD,CAAX,CAAP,CACA,IAAK,GAAIE,CAAAA,CAAT,GAAcF,CAAAA,CAAd,CAAoB,CAChBL,CAAU,CAAGK,CAAI,CAACE,CAAD,CAAjB,CACAN,CAAO,CAAGlB,QAAQ,CAACyB,cAAT,CAAwB,UAAYD,CAApC,CAAV,CACAL,CAAa,CAAGD,CAAO,CAACjB,sBAAR,CAA+B,oBAA/B,EAAqD,CAArD,CAAhB,CACAmB,CAAiB,CAAGpB,QAAQ,CAAC0B,aAAT,CAAuB,KAAvB,CAApB,CACAN,CAAiB,CAACO,SAAlB,CAA8BV,CAA9B,CACAG,CAAiB,CAACQ,SAAlB,CAA4BC,GAA5B,CAAgC,sBAAhC,EACAV,CAAa,CAACW,UAAd,CAAyBC,YAAzB,CAAsCX,CAAtC,CAAyDD,CAAa,CAACa,WAAvE,CACH,CACD,QACH,CAZD,EAYGC,IAZH,EAaH,CACJ,CA7BE,CA+BHC,IAAI,CAAE,eAAW,CACb,GAAIlC,QAAQ,CAACmC,IAAT,CAAcP,SAAd,CAAwBQ,QAAxB,CAAiC,kBAAjC,CAAJ,CAA0D,CACtD,KAAKtC,uBAAL,EACH,CACJ,CAnCE,CAsCV,CAxCK,CAAN","sourcesContent":["// This file is part of Moodle - http://moodle.org/\n//\n// Moodle is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// Moodle is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.\n\n/**\n * Module javascript to place the placeholders.\n * Modified version of IOMAD Email template emailvars.\n *\n * @package   mod_pulse\n * @category  Classes - autoloading\n * @copyright 2021, bdecent gmbh bdecent.de\n * @license   http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\n */\ndefine(['core/fragment'], function(Fragment) {\n\n    return {\n\n        updatecompletionbuttons: function() {\n            var instances = document.getElementsByClassName('modtype_pulse');\n            var modules = []; var moduleid;\n            for (var i = 0; i < instances.length; i++) {\n                var instance = instances[i];\n                var id = instance.getAttribute('id');\n                moduleid = parseInt(id.replace('module-', ''));\n                modules.push(moduleid);\n            }\n            var params = {modules:  JSON.stringify(modules)};\n            if (modules.length > 0) {\n                let completionbuttons = Fragment.loadFragment('mod_pulse', 'completionbuttons', 1, params);\n                var approvebtn, element, referenceNode, completioncontent;\n                completionbuttons.then((data) => {\n                    data = JSON.parse(data);\n                    for (var k in data) {\n                        approvebtn = data[k];\n                        element = document.getElementById('module-' + k);\n                        referenceNode = element.getElementsByClassName('contentwithoutlink')[0];\n                        completioncontent = document.createElement('div');\n                        completioncontent.innerHTML = approvebtn;\n                        completioncontent.classList.add('pulse-completion-btn');\n                        referenceNode.parentNode.insertBefore(completioncontent, referenceNode.nextSibling);\n                    }\n                    return true;\n                }).fail();\n            }\n        },\n\n        init: function() {\n            if (document.body.classList.contains('path-course-view')) {\n                this.updatecompletionbuttons();\n            }\n        },\n\n    };\n});"],"file":"completion.min.js"}